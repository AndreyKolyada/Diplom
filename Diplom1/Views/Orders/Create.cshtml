@using Diplom1.Models
@model Diplom1.Models.Order

@{
    ViewBag.Title = "Создать заказ";
    Layout = "~/Views/Shared/_LayoutBack.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Car, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Car, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Car, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date", min = DateTime.Today } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Job, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<Job> l = new List<Job>(ViewBag.Jobs);
                    var sl = new List<SelectListItem>();
                    foreach (Job j1 in l)
                    {
                        sl.Add(new SelectListItem
                        {
                            Value = j1.Id.ToString(),
                            Text = j1.Name
                        });
                    }
                }
                @Html.DropDownList("jobId", sl, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Person.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Person.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label style="max-width:35px">+375 </label>@Html.EditorFor(model => model.Person.Phone, new { htmlAttributes = new { @class = "form-control", type = "number", style = "display:inline-block; max-width: 249px" } })
                @Html.ValidationMessageFor(model => model.Person.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Подтвердить" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @{
        if (User.IsInRole("user") == true)
        {
            @Html.ActionLink("Вернуться к списку заказов", "Index")
        }
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
